{
	"name": "Streadata.io API Gallery - State",
	"description": "This is a repository of state APIs, self-contained as a Github repository, with HTML and YAML representations of the APIs and their surrounding operations.",
	"image": "http://template.streamdata.gallery/assets/state.png",
	"created": "2018-02-24",
	"modified": "2018-08-28",
	"url": "http://state.streamdata.gallery/apis.json",
	"specificationVersion": "0.14",
	"apis": [
		{
			"name": "Salesforce",
			"x-api-slug": "salesforce",
			"description": "Build more meaningful and lasting relationships and connect with your customers across sales, customer service, marketing, communities, apps, analytics, and more using our Customer Success Platform. Try for Free.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/175-salesforce.jpg",
			"humanURL": "http://developer.salesforce.com",
			"baseURL": "https://na14.salesforce.com//services/data/",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/salesforce/openapi.md"
				}
			]
		},
		{
			"name": "New York Senate",
			"x-api-slug": "new-york-senate",
			"description": "NYSenate.gov is designed to increase public participation in the legislative process. By facilitating efficient communication between individual New Yorkers and the senators who represent them, lawmakers are able to craft a better set of laws by which ...",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/446-new-york-senate.jpg",
			"humanURL": "http://www.nysenate.gov",
			"baseURL": "https:///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/new-york-senate/openapi.md"
				}
			]
		},
		{
			"name": "Atlassian",
			"x-api-slug": "atlassian",
			"description": "Millions of users globally rely on Atlassian products every day for improving software development, project management, collaboration, and code quality.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/691-atlassian.jpg",
			"humanURL": "http://atlassian.com/",
			"baseURL": "https:////",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/atlassian/openapi.md"
				}
			]
		},
		{
			"name": "Data.Illinois.Gov",
			"x-api-slug": "data-illinois-gov",
			"description": "The State of Illinois Home Page is a portal with links to other websites. These include links to web sites operated by Illinois agencies and officials, other government agencies, nonprofit organizations and private businesses.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/752-data-illinois-gov.jpg",
			"humanURL": "https://illinois.gov/",
			"baseURL": "https:///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/data-illinois-gov/openapi.md"
				}
			]
		},
		{
			"name": "OK.gov",
			"x-api-slug": "ok-gov",
			"description": "Welcome to Oklahomas Official Web Site",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/755-ok-gov.jpg",
			"humanURL": "https://data.ok.gov/",
			"baseURL": "https:///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/ok-gov/openapi.md"
				}
			]
		},
		{
			"name": "Data.Oregon.Gov",
			"x-api-slug": "data-oregon-gov",
			"description": "",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/756-data-oregon-gov.jpg",
			"humanURL": "https://oregon.gov/",
			"baseURL": "https:///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/data-oregon-gov/openapi.md"
				}
			]
		},
		{
			"name": "Data.Washington",
			"x-api-slug": "data-washington",
			"description": "The Employment Security Department helps Washington states workers and employers succeed in the global economy by delivering superior employment services, timely unemployment benefits, and a fair and stable unemployment-benefits system.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/758-data-washington.jpg",
			"humanURL": "https://wa.gov/",
			"baseURL": "https:///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/data-washington/openapi.md"
				}
			]
		},
		{
			"name": "OpenColorado",
			"x-api-slug": "opencolorado",
			"description": "OpenColorado is working to make public data available and accessible to the citizens of Colorado.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/878-opencolorado.jpg",
			"humanURL": "http://opencolorado.org",
			"baseURL": "https:///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/opencolorado/openapi.md"
				}
			]
		},
		{
			"name": "RI.gov Open Data",
			"x-api-slug": "ri-gov-open-data",
			"description": "The Official Web Site of the State of Rhode Island",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/911-ri-gov-open-data.jpg",
			"humanURL": "http://www.ri.gov",
			"baseURL": "https:///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/ri-gov-open-data/openapi.md"
				}
			]
		},
		{
			"name": "Healthcare.gov",
			"x-api-slug": "healthcare-gov",
			"description": "HealthCare.gov is a health insurance exchange website operated under the United States federal government under the provisions of the Patient Protection and Affordable Care Act (ACA, often known as Obamacare), designed to serve the residents of the thirty-six U.S. states that opted not to create their own state exchanges. The exchange facilitates the sale of private health insurance plans to residents of the United States[2] and offers subsidies to those who earn less than four times the federal poverty line. The website also assists those persons who are eligible to sign up for Medicaid, and has a separate marketplace for small businesses.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Healthcare.gov_logo.png",
			"humanURL": "http://www.healthcare.gov",
			"baseURL": "https://www.healthcare.gov//",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/healthcare-gov/openapi.md"
				}
			]
		},
		{
			"name": "Open Bank Project",
			"x-api-slug": "open-bank-project",
			"description": "The Open Bank Project is an open source API and App store for banks that empowers financial institutions to securely and rapidly enhance their digital offerings using an ecosystem of 3rd party applications and services.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/open-bank-project.png",
			"humanURL": "https://openbankproject.com/",
			"baseURL": "https:////open-banking/v2.0",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/open-bank-project/openapi.md"
				}
			]
		},
		{
			"name": "AWS CloudWatch",
			"x-api-slug": "aws-cloudwatch",
			"description": "Amazon CloudWatch is a monitoring service for AWS cloud resources and the applications you run on AWS. You can use Amazon CloudWatch to collect and track metrics, collect and monitor log files, set alarms, and automatically react to changes in your AWS resources. Amazon CloudWatch can monitor AWS resources such as Amazon EC2 instances, Amazon DynamoDB tables, and Amazon RDS DB instances, as well as custom metrics generated by your applications and services, and any log files your applications generate. You can use Amazon CloudWatch to gain system-wide visibility into resource utilization, application performance, and operational health. You can use these insights to react and keep your application running smoothly.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Management-Tools_AmazonCloudWatch.png",
			"humanURL": "https://aws.amazon.com/cloudwatch/",
			"baseURL": ":///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-cloudwatch/openapi.md"
				}
			]
		},
		{
			"name": "AWS EC2 Container Service",
			"x-api-slug": "aws-ec2-container-service",
			"description": "Amazon EC2 Container Service (ECS) is a highly scalable, high performance container management service that supports Docker containers and allows you to easily run applications on a managed cluster of Amazon EC2 instances. Amazon ECS eliminates the need for you to install, operate, and scale your own cluster management infrastructure. With simple API calls, you can launch and stop Docker-enabled applications, query the complete state of your cluster, and access many familiar features like security groups, Elastic Load Balancing, EBS volumes, and IAM roles. You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs and availability requirements. You can also integrate your own scheduler or third-party schedulers to meet business or application specific requirements.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Compute_AmazonECS.png",
			"humanURL": "https://aws.amazon.com/ecs/",
			"baseURL": ":///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-ec2-container-service/openapi.md"
				}
			]
		},
		{
			"name": "AWS Lightsale",
			"x-api-slug": "aws-lightsale",
			"description": "Amazon Lightsail is the easiest way to get started with AWS for developers who just need virtual private servers. Lightsail includes everything you need to launch your project quickly - a virtual machine, SSD-based storage, data transfer, DNS management, and a static IP - for a low, predictable price. You manage those Lightsail servers through the Lightsail console or by using the API or command-line interface (CLI).",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/aws-lightsail.png",
			"humanURL": "https://amazonlightsail.com/",
			"baseURL": ":///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-lightsale/openapi.md"
				}
			]
		},
		{
			"name": "AWS Snowball",
			"x-api-slug": "aws-snowball",
			"description": "Snowball is a petabyte-scale data transport solution that uses secure appliances totransfer large amounts of datainto and out of theAWS cloud. Using Snowball addresses common challenges with large-scale data transfers including high network costs, long transfer times, and security concerns. Transferring data with Snowball is simple, fast, secure, and can be as little as one-fifth the cost of high-speed Internet.With Snowball, you don&rsquo;t need to write any code or purchase any hardware to transfer your data. Simply create a job in the AWS Management Console and a Snowball appliance will be automatically shipped to you*. Once it arrives, attach the appliance to your local network, download and run the Snowball client to establish a connection, and then use the client to select the file directories that you want to transfer to the appliance. The client will then encrypt and transfer the files to the appliance at high speed. Once the transfer is complete and the appliance is ready to be returned, the E Ink shipping label will automatically update and you can track the job status viaAmazon Simple Notification Service (SNS), text messages, or directly in the Console.Snowball uses multiple layers of security designed to protect your data including tamper-resistant enclosures, 256-bit encryption, and an industry-standard Trusted Platform Module (TPM) designed to ensure both security and full chain-of-custody of your data. Once the data transfer job has been processed and verified, AWS performs a software erasure of the Snowball appliance.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Storage-Content-Delivery_AWSImportExportSnowball.png",
			"humanURL": "https://aws.amazon.com/snowball/",
			"baseURL": ":///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-snowball/openapi.md"
				}
			]
		},
		{
			"name": "AWS Code Pipeline",
			"x-api-slug": "aws-code-pipeline",
			"description": "AWS Data Pipeline is a web service that helps you reliably process and move data between different AWS compute and storage services, as well as on-premise data sources, at specified intervals. With AWS Data Pipeline, you can regularly access your data where it&rsquo;s stored, transform and process it at scale, and efficiently transfer the results to AWS services such as Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon EMR.AWS Data Pipeline helps you easily create complex data processing workloads that are fault tolerant, repeatable, and highly available. You don&rsquo;t have to worry about ensuring resource availability, managing inter-task dependencies, retrying transient failures or timeouts in individual tasks, or creating a failure notification system. AWS Data Pipeline also allows you to move and process data that was previously locked up in on-premise data silos.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Developer-Tools_AWSCodePipeline.png",
			"humanURL": "https://aws.amazon.com/datapipeline/",
			"baseURL": ":///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-code-pipeline/openapi.md"
				}
			]
		},
		{
			"name": "AWS EC2 Systems Manager",
			"x-api-slug": "aws-ec2-systems-manager",
			"description": "Amazon EC2 Systems Manager is a management service that helps you automatically collect software inventory, apply OS patches, create system images, and configure Windows and Linux operating systems. These capabilities help you define and track system configurations, prevent drift, and maintain software compliance of your EC2 and on-premises configurations. By providing a management approach that is designed for the scale and agility of the cloud but extends into your on-premises data center, EC2 Systems Manager makes it easier for you to seamlessly bridge your existing infrastructure with AWS.EC2 Systems Manager is easy to use. Simply access EC2 Systems Manager from the EC2 Management Console, select the instances you want to manage, and define the management tasks you want to perform. EC2 Systems Manager is available now at no cost to manage both your EC2 and on-premises resources.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Compute_AmazonEC2.png",
			"humanURL": "https://aws.amazon.com/ec2/systems-manager/",
			"baseURL": ":///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-ec2-systems-manager/openapi.md"
				}
			]
		},
		{
			"name": "AWS Step Functions",
			"x-api-slug": "aws-step-functions",
			"description": "AWS Step Functions makes it easy to coordinate the components of distributed applications and microservices using visual workflows. Building applications from individual components that each perform a discrete function lets you scale and change applications quickly. Step Functions is a reliable way to coordinate components and step through the functions of your application. Step Functions provides a graphical console to arrange and visualize the components of your application as a series of steps. This makes it simple to build and run multi-step applications. Step Functions automatically triggers and tracks each step, and retries when there are errors, so your application executes in order and as expected. Step Functions logs the state of each step, so when things do go wrong, you can diagnose and debug problems quickly. You can change and add steps without even writing code, so you can easily evolve your application and innovate faster.AWS Step Functions manages the operations and underlying infrastructure for you to help ensure your application is available at any scale.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/aws-step-functions.png",
			"humanURL": "https://aws.amazon.com/step-functions/",
			"baseURL": ":///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-step-functions/openapi.md"
				}
			]
		},
		{
			"name": "AWS Route 53",
			"x-api-slug": "aws-route-53",
			"description": "Amazon Route 53 is a highly available and scalable cloud Domain Name System (DNS) web service. It is designed to give developers and businesses an extremely reliable and cost effective way to route end users to Internet applications by translating names like www.example.com into the numeric IP addresses like 192.0.2.1 that computers use to connect to each other. Amazon Route 53 is fully compliant with IPv6 as well.Amazon Route 53 effectively connects user requests to infrastructure running in AWS &ndash; such as Amazon EC2 instances, Elastic Load Balancing load balancers, or Amazon S3 buckets &ndash; and can also be used to route users to infrastructure outside of AWS. You can use Amazon Route 53 to configure DNS health checks to route traffic to healthy endpoints or to independently monitor the health of your application and its endpoints. Amazon Route 53 Traffic Flow makes it easy for you to manage traffic globally through a variety of routing types, including Latency Based Routing, Geo DNS, and Weighted Round Robin&mdash;all of which can be combined with DNS Failover in order to enable a variety of low-latency, fault-tolerant architectures. Using Amazon Route 53 Traffic Flow&rsquo;s simple visual editor, you can easily manage how your end-users are routed to your application&rsquo;s endpoints&mdash;whether in a single AWS region or distributed around the globe. Amazon Route 53 also offers Domain Name Registration &ndash; you can purchase and manage domain names such as example.com and Amazon Route 53 will automatically configure DNS settings for your domains.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Networking_AmazonRoute53.png",
			"humanURL": "https://aws.amazon.com/route53/",
			"baseURL": ":///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-route-53/openapi.md"
				}
			]
		},
		{
			"name": "Google Play",
			"x-api-slug": "google-play",
			"description": "The Google Play Developer API allows you to perform a number of publishing and app-management tasks. It includes two components: The Subscriptions and In-App Purchases API lets you manage in-app purchases and subscriptions. The Publishing API lets you upload and publish apps, and perform other publishing-related tasks.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/google-play.png",
			"humanURL": "https://play.google.com/store",
			"baseURL": "https:///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/google-play/openapi.md"
				}
			]
		},
		{
			"name": "Lykke",
			"x-api-slug": "lykke",
			"description": "Lykke is a movement to build one global marketplace that is a level playing field where everyone has access.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/26564-lykke.jpg",
			"humanURL": "https://lykke.com",
			"baseURL": "https:////",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/lykke/openapi.md"
				}
			]
		},
		{
			"name": "TradeStation",
			"x-api-slug": "tradestation",
			"description": "Whether you trade stocks, ETFs, options or futures, TradeStation???s award-winning tools and brokerage services can give you the confidence to achieve your goals.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/tradestation_logo_285x40.png",
			"humanURL": "http://www.tradestation.com",
			"baseURL": "https://api.tradestation.com//v2",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/tradestation/openapi.md"
				}
			]
		},
		{
			"name": "Avaza",
			"x-api-slug": "avaza",
			"description": "Avaza is a beautiful online software suite with modules for Project Management, Timesheets, Expenses &amp; Invoicing. Access from anywhere, with any device. Avaza is the leading all-in-one software for running client focused businesses. Avaza allows businesses of all sizes to more easily and effectively manage team projects, time tracking, expense reporting, quoting &amp; invoicing. It can be accessed simply via a web browser from anywhere in the world on any device.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/28373-avaza.jpg",
			"humanURL": "https://www.avaza.com",
			"baseURL": "https:///",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/avaza/openapi.md"
				}
			]
		},
		{
			"name": "Ship Station",
			"x-api-slug": "ship-station",
			"description": "ShipStation is a web-based shipping solution that streamlines the order fulfillment process for your online business. ShipStation consolidates orders from over 70 ecommerce channels, creates shipping labels, packing slips, and pick lists in batch, communicates tracking information to your customers, provides endless automation, filters, and views, wireless printing, a mobile app, and a lot more.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/ShipStation-stacked-blue.png",
			"humanURL": "http://bit.ly/_ShipStation",
			"baseURL": "https://ssapi.shipstation.com//",
			"tags": "State",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/ship-station/openapi.md"
				}
			]
		}
	],
	"tags": "State",
	"include": [
		{
			"name": "Salesforce",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/salesforce/apis.yaml"
		},
		{
			"name": "New York Senate",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/new-york-senate/apis.yaml"
		},
		{
			"name": "Atlassian",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/atlassian/apis.yaml"
		},
		{
			"name": "Data.Illinois.Gov",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/data-illinois-gov/apis.yaml"
		},
		{
			"name": "OK.gov",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/ok-gov/apis.yaml"
		},
		{
			"name": "Data.Oregon.Gov",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/data-oregon-gov/apis.yaml"
		},
		{
			"name": "Data.Washington",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/data-washington/apis.yaml"
		},
		{
			"name": "OpenColorado",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/opencolorado/apis.yaml"
		},
		{
			"name": "RI.gov Open Data",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/ri-gov-open-data/apis.yaml"
		},
		{
			"name": "Healthcare.gov",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/healthcare-gov/apis.yaml"
		},
		{
			"name": "Open Bank Project",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/open-bank-project/apis.yaml"
		},
		{
			"name": "AWS CloudWatch",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-cloudwatch/apis.yaml"
		},
		{
			"name": "AWS EC2 Container Service",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-ec2-container-service/apis.yaml"
		},
		{
			"name": "AWS Lightsale",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-lightsale/apis.yaml"
		},
		{
			"name": "AWS Snowball",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-snowball/apis.yaml"
		},
		{
			"name": "AWS Code Pipeline",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-code-pipeline/apis.yaml"
		},
		{
			"name": "AWS EC2 Systems Manager",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-ec2-systems-manager/apis.yaml"
		},
		{
			"name": "AWS Step Functions",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-step-functions/apis.yaml"
		},
		{
			"name": "AWS Route 53",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/aws-route-53/apis.yaml"
		},
		{
			"name": "Google Play",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/google-play/apis.yaml"
		},
		{
			"name": "Lykke",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/lykke/apis.yaml"
		},
		{
			"name": "TradeStation",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/tradestation/apis.yaml"
		},
		{
			"name": "Avaza",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/avaza/apis.yaml"
		},
		{
			"name": "Ship Station",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/state/master/_listings/ship-station/apis.yaml"
		}
	]
}